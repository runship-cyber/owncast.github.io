<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Owncast Quickstart on</title><link>/quickstart/</link><description>Recent content in Owncast Quickstart on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="/quickstart/index.xml" rel="self" type="application/rss+xml"/><item><title>Prerequisites</title><link>/quickstart/prerequisites/</link><pubDate>Tue, 17 Nov 2020 20:11:42 +0100</pubDate><guid>/quickstart/prerequisites/</guid><description>A computer that&amp;rsquo;s on the public internet to run it on. While crunching through video and serving it to viewers can be intensive from the computing side, you can get away with pretty meager resources on a simple setup. If you don&amp;rsquo;t already have a server to run it on you can get a Linode instance for $5/mo that runs it fine. If you worry that you&amp;rsquo;ll be maxing out the bandwidth or transfer limits allotted to you, then utilize External Storage very affordably (or even free for a certain amount) to serve the files instead.</description></item><item><title>Manual Install</title><link>/quickstart/manual/</link><pubDate>Tue, 17 Nov 2020 20:11:42 +0100</pubDate><guid>/quickstart/manual/</guid><description> Make a directory to run the service from, and download a release from https://github.com/owncast/owncast/releases into that directory. Unzip the release. Run ./owncast to start the service. Visit the admin at /admin to configure your server using the usernmae admin and the default stream key as the password, abc123.</description></item><item><title>Use a Docker image</title><link>/quickstart/docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/quickstart/docker/</guid><description> Pull the latest version from Dockerhub: docker pull gabekangas/owncast:latest. Run docker run -v `pwd`/data:/app/data -p 8080:8080 -p 1935:1935 -it gabekangas/owncast:latest to start the service. This will bind the data directory so you have access to backups and your database in case you need to move it to another server.</description></item><item><title>Install with Site.js</title><link>/quickstart/sitejs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/quickstart/sitejs/</guid><description>Site.js is a toolset by the Small Technology Foundation that allows you to easily setup a production web server. Additionally it can install Owncast for you, supporting SSL, configured to run as a service.
If you have no other SSL proxy on your system (such as Caddy or nginx) and you&amp;rsquo;re not already comfortable setting up systemd, Site.js is the fastest way from you to go from nothing to a production Owncast installation.</description></item><item><title>Configure</title><link>/quickstart/configure/</link><pubDate>Tue, 17 Nov 2020 20:11:42 +0100</pubDate><guid>/quickstart/configure/</guid><description>While Owncast will work for you out of the box, there are things most people will want to customize after getting it up and running.
Configuration is done through the Owncast administration page located on your server under /admin. The login username is admin and the password is your stream key, the default being abc123.
Some common items many people would want to update after installing Owncast are:
Your site name, logo, description and external links that are displayed on the web site.</description></item><item><title>Start Streaming</title><link>/quickstart/startstreaming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/quickstart/startstreaming/</guid><description>Any piece of software you&amp;rsquo;re already using for live streaming is likely compatible with Owncast. Visit our broadcasting software page to see some specific pieces of software and how they&amp;rsquo;re configured.
Point your broadcasting software at your new server using rtmp://yourserver/live with your stream key. If your software doesn&amp;rsquo;t have a way to specify a stream key simply use the url rtmp://yourserver/live/streamkey and use your specific stream key instead. Access your server in your web browser by visiting http://yourserver:8080.</description></item><item><title>Next Steps</title><link>/quickstart/nextsteps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/quickstart/nextsteps/</guid><description>Support HTTPS While not required, most people will want to support SSL on a public Owncast server. If you plan on embedding your Owncast video into another site or are offering your video to the public internet you&amp;rsquo;re likely to need to add a SSL proxy to your setup. Learn more about how to do this.
Run as a system service Most people will want to setup Owncast to automatically start in the background any time their server restarts.</description></item><item><title>Supported one-click installs</title><link>/quickstart/providers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/quickstart/providers/</guid><description>The following service providers offer 1-click-install options for Owncast where you can get up and running without manually installing the software.
Note: The Owncast Project may receive referral credit for deploying Owncast with these options, so it&amp;rsquo;s an easy way to support the project.
Get $100 worth of service for free if you sign up with either of these providers.</description></item></channel></rss>