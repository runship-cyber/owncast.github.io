{"version":"https://jsonfeed.org/version/1.1","title":"SSL & HTTP Proxies","description":"Put your Owncast server behind a proxy to enable SSL.","home_page_url":"/","feed_url":"/docs/sslproxies/index.json","language":"en-US","items":[{"title":"Caddy","date_published":"0001-01-01T00:00:00Z","date_modified":"2021-02-19T01:30:55Z","id":"/docs/sslproxies/caddy/","url":"/docs/sslproxies/caddy/","content_html":"\u003cp\u003e\u003ca href=\"https://caddyserver.com/\"\u003eCaddy\u003c/a\u003e is the fastest way to setup a SSL reverse proxy with a free certificate from \u003ca href=\"https://letsencrypt.org/\"\u003eLet\u0026rsquo;s Encrypt\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eWhile we will try to walk you through some installation steps \u003cstrong\u003eit is highly suggested you follow Caddy\u0026rsquo;s \u003ca href=\"https://caddyserver.com/docs/install\"\u003eInstall options\u003c/a\u003e and \u003ca href=\"https://caddyserver.com/docs/quick-starts/reverse-proxy\"\u003eReverse Proxy Quickstart\u003c/a\u003e for more documentation, examples and detailed information\u003c/strong\u003e. Caddy is a well documented quality piece of software that you should get familiar with if you need to run a SSL reverse proxy.\u003c/p\u003e\n\u003ch2 id=\"1-make-sure-you-dont-have-other-web-servers-running\"\u003e1. Make sure you don\u0026rsquo;t have other web servers running.\u003c/h2\u003e\n\u003cp\u003eIf you are running other pieces of web server software such as Apache or NGINX using port 80 or 443 then you won\u0026rsquo;t be able to continue with this Caddy install. Either remove the other pieces of software or read up on how to make them live in harmony.\u003c/p\u003e\n\u003ch2 id=\"2-install-caddy\"\u003e2. Install Caddy\u003c/h2\u003e\n\u003cp\u003eDepending on your system there may be different options on installing. Using APT is suggested if it\u0026rsquo;s supported on your machine.\u003c/p\u003e\n\u003cdetails\u003e\n  \u003csummary\u003eUsing APT (recommended) \u003c/summary\u003e\n\u003cp\u003eInstalling this package automatically starts and runs Caddy for you as a systemd service so it will automatically run Caddy each time you start your machine.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo apt install -y debian-keyring debian-archive-keyring apt-transport-https\ncurl -1sLf \u003cspan class=\"s1\"\u003e\u0026#39;https://dl.cloudsmith.io/public/caddy/stable/gpg.key\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e sudo apt-key add -\ncurl -1sLf \u003cspan class=\"s1\"\u003e\u0026#39;https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e sudo tee -a /etc/apt/sources.list.d/caddy-stable.list\nsudo apt update\nsudo apt install caddy\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://caddyserver.com/docs/install#debian-ubuntu-raspbian\"\u003eRead the Caddy install steps for using apt\u003c/a\u003e for more details.\u003c/p\u003e\n\u003c/details\u003e\n\u003cdetails\u003e\n  \u003csummary\u003eDownload manually\u003c/summary\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/caddyserver/caddy/releases\"\u003eVisit the releases page\u003c/a\u003e and expand the \u0026ldquo;assets\u0026rdquo; section.\u003c/li\u003e\n\u003cli\u003eFind the version for your platform and operating system.\u003c/li\u003e\n\u003cli\u003eUnarchive the file: \u003ccode\u003etar -xvzf caddy_2.3.0_linux_amd64.tar.gz\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eYou\u0026rsquo;re likely to want to setup Caddy as a system service to auatomatically start in the background.  \u003ca href=\"https://caddyserver.com/docs/install#linux-service\"\u003eLearn how to do this\u003c/a\u003e.\n\u003ca href=\"https://caddyserver.com/docs/install#static-binaries\"\u003eRead the Caddy download page for more details.\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/details\u003e\n\u003ch2 id=\"3-run-caddy-as-a-reverse-proxy\"\u003e3. Run Caddy as a reverse proxy\u003c/h2\u003e\n\u003cdetails\u003e\n  \u003csummary\u003eSingle command line\u003c/summary\u003e\n\u003cp\u003eIt offers automatic configuration of HTTPS with a single command.\u003c/p\u003e\n\u003cp\u003e\u003cbutton class=\"btn-clipboard btn btn-sm btn-link\" data-clipboard-text=\"caddy reverse-proxy --from owncast.mydomain.com --to 127.0.0.1:8080\"\u003e\u003cspan class=\"copy-status\"\u003e\u003c/span\u003e\u003c/button\u003e\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ecaddy reverse-proxy --from owncast.mydomain.com --to 127.0.0.1:8080\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eReplace \u003ccode\u003eowncast.mydomain.com\u003c/code\u003e with the public hostname of your Owncast server like \u003ccode\u003ewatch.owncast.online\u003c/code\u003e for example.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://caddyserver.com/docs/quick-starts/reverse-proxy\"\u003eRead the Caddy reverse proxy documentation for more details.\u003c/a\u003e\u003c/p\u003e\n\u003c/details\u003e\n\u003cdetails\u003e\n  \u003csummary\u003eCaddyfile\u003c/summary\u003e\n\u003cp\u003eThe \u003ca href=\"https://caddyserver.com/docs/caddyfile\"\u003eCaddyfile\u003c/a\u003e is Caddy\u0026rsquo;s config file.\u003c/p\u003e\n\u003cp\u003eAdd to your Caddyfile:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-caddyfile\" data-lang=\"caddyfile\"\u003eowncast.mydomain.com {\nencode gzip\nreverse_proxy 127.0.0.1:8080\ntls webmaster@mydomain.com\n}\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eReplace \u003ccode\u003eowncast.mydomain.com\u003c/code\u003e with the public hostname of your Owncast server like \u003ccode\u003ewatch.owncast.online\u003c/code\u003e for example.\u003c/p\u003e\n\u003c/details\u003e\n\u003chr\u003e\n\u003cp\u003eIf you specify \u003ccode\u003eowncast.mydomain.com\u003c/code\u003e without a protocol or a port, it will attempt to use the default \u003ccode\u003ehttp\u003c/code\u003e and \u003ccode\u003ehttps\u003c/code\u003e ports (80 and 443). Since these are \u003ca href=\"https://www.w3.org/Daemon/User/Installation/PrivilegedPorts.html#:~:text=Priviliged%20ports,has%20put%20up%20for%20you.\"\u003e\u003cem\u003eprivileged ports\u003c/em\u003e\u003c/a\u003e, you will need to run caddy with \u003ccode\u003esudo\u003c/code\u003e or as \u003ccode\u003eroot\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id=\"4-run-owncast-normally\"\u003e4. Run Owncast normally\u003c/h2\u003e\n\u003cp\u003eContinue to run Owncast on port 8080.\u003c/p\u003e\n\u003ch2 id=\"5-access-owncast-through-the-proxy\"\u003e5. Access Owncast through the proxy\u003c/h2\u003e\n\u003chr\u003e\n\u003cp\u003eYou should now be able to access your Owncast server by visiting \u003ca href=\"https://owncast.mydomain.com\"\u003ehttps://owncast.mydomain.com\u003c/a\u003e instead of \u003ca href=\"http://owncast.mydomain.com\"\u003ehttp://owncast.mydomain.com\u003c/a\u003e:8080.\u003c/p\u003e\n\u003cp\u003eReplace \u003ccode\u003eowncast.mydomain.com\u003c/code\u003e with the public hostname of your Owncast server like \u003ccode\u003ewatch.owncast.online\u003c/code\u003e for example.\u003c/p\u003e\n"},{"title":"NGINX","date_published":"0001-01-01T00:00:00Z","date_modified":"2021-01-27T14:46:25-08:00","id":"/docs/sslproxies/nginx/","url":"/docs/sslproxies/nginx/","content_html":"\u003cp\u003eNGINX is a popular web server used as a reverse proxy with free Let\u0026rsquo;s Encrypt certificates.  Visit the \u003ca href=\"https://www.nginx.com/blog/using-free-ssltls-certificates-from-lets-encrypt-with-nginx/\"\u003eofficial documentation\u003c/a\u003e for detailed instructions.\u003c/p\u003e\n\u003ch2 id=\"websockets\"\u003eWebsockets\u003c/h2\u003e\n\u003cp\u003ePeople often look over the need to tell NGINX to proxy websockets correctly, leading to chat being disabled.  Please read the quick \u003ca href=\"https://nginx.org/en/docs/http/websocket.html\"\u003edocumentation by nginx around websocket support\u003c/a\u003e to make sure you\u0026rsquo;re doing it properly.\u003c/p\u003e\n\u003cp\u003eYou\u0026rsquo;ll end up with a configuration that looks somewhat like the following when you\u0026rsquo;re done setting up NGINX.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-nginx\" data-lang=\"nginx\"\u003e\u003cspan class=\"k\"\u003eserver\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kn\"\u003eserver_name\u003c/span\u003e \u003cspan class=\"s\"\u003eowncast.yourdomain.com\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"kn\"\u003elocation\u003c/span\u003e \u003cspan class=\"s\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kn\"\u003eproxy_set_header\u003c/span\u003e \u003cspan class=\"s\"\u003eHost\u003c/span\u003e \u003cspan class=\"nv\"\u003e$host\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"kn\"\u003eproxy_set_header\u003c/span\u003e \u003cspan class=\"s\"\u003eX-Forwarded-Host\u003c/span\u003e \u003cspan class=\"nv\"\u003e$host\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"kn\"\u003eproxy_set_header\u003c/span\u003e \u003cspan class=\"s\"\u003eX-Forwarded-Server\u003c/span\u003e \u003cspan class=\"nv\"\u003e$host\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"kn\"\u003eproxy_set_header\u003c/span\u003e \u003cspan class=\"s\"\u003eX-Forwarded-Proto\u003c/span\u003e \u003cspan class=\"nv\"\u003e$scheme\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"kn\"\u003eproxy_set_header\u003c/span\u003e \u003cspan class=\"s\"\u003eX-Real-IP\u003c/span\u003e \u003cspan class=\"nv\"\u003e$remote_addr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"kn\"\u003eproxy_set_header\u003c/span\u003e \u003cspan class=\"s\"\u003eX-Forwarded-For\u003c/span\u003e \u003cspan class=\"nv\"\u003e$proxy_add_x_forwarded_for\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"kn\"\u003eproxy_http_version\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"s\"\u003e.1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"kn\"\u003eproxy_set_header\u003c/span\u003e \u003cspan class=\"s\"\u003eUpgrade\u003c/span\u003e \u003cspan class=\"nv\"\u003e$http_upgrade\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"kn\"\u003eproxy_set_header\u003c/span\u003e \u003cspan class=\"s\"\u003eConnection\u003c/span\u003e \u003cspan class=\"nv\"\u003e$connection_upgrade\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"kn\"\u003eproxy_pass\u003c/span\u003e \u003cspan class=\"s\"\u003ehttp://127.0.0.1:8080\u003c/span\u003e\n        \n        \u003cspan class=\"s\"\u003elisten\u003c/span\u003e \u003cspan class=\"mi\"\u003e443\u003c/span\u003e \u003cspan class=\"s\"\u003essl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"kn\"\u003essl_certificate\u003c/span\u003e \u003cspan class=\"s\"\u003e/etc/letsencrypt/live/yourdomain.com/fullchain.pem\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"kn\"\u003essl_certificate_key\u003c/span\u003e \u003cspan class=\"s\"\u003e/etc/letsencrypt/live/yourdomain.com/privkey.pem\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"kn\"\u003einclude\u003c/span\u003e \u003cspan class=\"s\"\u003e/etc/letsencrypt/options-ssl-nginx.conf\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"kn\"\u003essl_dhparam\u003c/span\u003e \u003cspan class=\"s\"\u003e/etc/letsencrypt/ssl-dhparams.pem\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n"},{"title":"Apache","date_published":"0001-01-01T00:00:00Z","date_modified":"2021-01-27T14:46:25-08:00","id":"/docs/sslproxies/apache/","url":"/docs/sslproxies/apache/","content_html":"\u003cp\u003eApache requires the most boilerplate configuration, but if you\u0026rsquo;re already using Apache as a web server you can \u003ca href=\"https://httpd.apache.org/docs/2.4/howto/reverse_proxy.html\"\u003econfigure it as a reverse proxy\u003c/a\u003e in front of your Owncast server to enable SSL.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-ApacheConf\" data-lang=\"ApacheConf\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;VirtualHost\u003c/span\u003e \u003cspan class=\"s\"\u003e*:80\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003eServerName\u003c/span\u003e live.example.com\n        \u003cspan class=\"nb\"\u003eServerAdmin\u003c/span\u003e admin@example.com\n\n        \u003cspan class=\"nb\"\u003eRewriteEngine\u003c/span\u003e \u003cspan class=\"k\"\u003eon\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003eRewriteCond\u003c/span\u003e %{SERVER_NAME} =live.example.com\n        \u003cspan class=\"nb\"\u003eRewriteRule\u003c/span\u003e ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]\n\u003cspan class=\"nt\"\u003e\u0026lt;/VirtualHost\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e# live-le-ssl.conf\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;IfModule\u003c/span\u003e \u003cspan class=\"s\"\u003emod_ssl.c\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;VirtualHost\u003c/span\u003e \u003cspan class=\"s\"\u003e*:443\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003eServerName\u003c/span\u003e live.example.com\n        \u003cspan class=\"nb\"\u003eServerAdmin\u003c/span\u003e admin@example.com\n\n        \u003cspan class=\"nb\"\u003eProxyRequests\u003c/span\u003e       \u003cspan class=\"k\"\u003eOff\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003eProxyPreserveHost\u003c/span\u003e   \u003cspan class=\"k\"\u003eOn\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003eAllowEncodedSlashes\u003c/span\u003e NoDecode\n\n        \u003cspan class=\"nt\"\u003e\u0026lt;Proxy\u003c/span\u003e \u003cspan class=\"s\"\u003e*\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n          \u003cspan class=\"nb\"\u003eOrder\u003c/span\u003e deny,allow\n          \u003cspan class=\"nb\"\u003eAllow\u003c/span\u003e from \u003cspan class=\"k\"\u003eall\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/Proxy\u0026gt;\u003c/span\u003e\n\n        \u003cspan class=\"nb\"\u003eProxyPass\u003c/span\u003e        / http://localhost:8080/\n        \u003cspan class=\"nb\"\u003eProxyPassReverse\u003c/span\u003e / http://localhost:8080/\n\n        \u003cspan class=\"nb\"\u003eRequestHeader\u003c/span\u003e    set X-Forwarded-Proto \u003cspan class=\"s2\"\u003e\u0026#34;https\u0026#34;\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003eRequestHeader\u003c/span\u003e    set X-Forwarded-Port \u003cspan class=\"s2\"\u003e\u0026#34;443\u0026#34;\u003c/span\u003e\n\n        \u003cspan class=\"c\"\u003e# setup the proxy to forward websocket requests properly\u003c/span\u003e\n        \u003cspan class=\"c\"\u003e# (note: this proxy automatically converts the secure websocket (wss)\u003c/span\u003e\n        \u003cspan class=\"c\"\u003e# to a normal websocket and vice versa.\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003eRewriteEngine\u003c/span\u003e \u003cspan class=\"k\"\u003eOn\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003eRewriteCond\u003c/span\u003e %{HTTP:UPGRADE} ^WebSocket$           [NC,OR]\n        \u003cspan class=\"nb\"\u003eRewriteCond\u003c/span\u003e %{HTTP:CONNECTION} ^Upgrade$          [NC]\n        \u003cspan class=\"nb\"\u003eRewriteRule\u003c/span\u003e .* ws://127.0.0.1:8080%{REQUEST_URI}  [P,QSA,L]\n\n        \u003cspan class=\"nb\"\u003eSSLCertificateFile\u003c/span\u003e \u003cspan class=\"sx\"\u003e/path/to/fullchain.pem\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003eSSLCertificateKeyFile\u003c/span\u003e \u003cspan class=\"sx\"\u003e/path/to/privkey.pem\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003eInclude\u003c/span\u003e \u003cspan class=\"sx\"\u003e/etc/letsencrypt/options-ssl-apache.conf\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/VirtualHost\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/IfModule\u0026gt;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n"}]}