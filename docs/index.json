{"version":"https://jsonfeed.org/version/1.1","title":"Documentation","description":"","home_page_url":"/","feed_url":"/docs/index.json","language":"en-US","items":[{"title":"Configuration","date_published":"0001-01-01T00:00:00Z","date_modified":"2021-03-04T19:44:34-08:00","id":"/docs/configuration/","url":"/docs/configuration/","content_html":"\u003cp\u003eConfiguration is done through the Owncast administration page located on your server under \u003ccode\u003e/admin\u003c/code\u003e. The login username is \u003ccode\u003eadmin\u003c/code\u003e and the password is your stream key, the default being \u003ccode\u003eabc123\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eSome common items many people would want to update after installing Owncast are:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eYour site name, logo, description and external links that are displayed on the \u003ca href=\"/docs/website\"\u003eweb site\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eThe \u003cstrong\u003estream key\u003c/strong\u003e to gain access to broadcasting to your stream and your admin.\u003c/li\u003e\n\u003cli\u003eEnable your stream to show up in the \u003ca href=\"/docs/directory\"\u003eOwncast Directory\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web-site-details\"\u003eWeb site details\u003c/h2\u003e\n\u003cp\u003eYour site name, logo, description, and page content can be set in the admin. You can also add links to your social profiles and web sites that exist elsewhere. \u003ca href=\"/docs/website\"\u003eSee details about the web site and chat interface\u003c/a\u003e.\n\u003cspan class=\"version-support\"\u003e\n  Changing page settings in the admin panel was first supported in \u003ca href=\"https://github.com/owncast/owncast/releases/tag/v0.0.6\"\u003eOwncast 0.0.6\u003c/a\u003e.\n\u003c/span\u003e\n\u003c/p\u003e\n\u003cfigure\u003e\n    \u003cimg src=\"/docs/img/admin-general-settings.png\"\n         alt=\"Owncast general settings\" width=\"80%\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003eOwncast general settings\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003ch2 id=\"video-output\"\u003eVideo output\u003c/h2\u003e\n\u003cp\u003eDepending on your hardware you may be able to configure your server to support multiple output variants for multiple different viewing conditions. \u003ca href=\"/docs/encoding\"\u003eLearn how to configure your video and see how it directly effects your CPU usage\u003c/a\u003e.\u003c/p\u003e\n\u003cfigure\u003e\n    \u003cimg src=\"/docs/img/admin-config-video-variant.png\"\n         alt=\"Owncast video settings\" width=\"80%\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003eOwncast video settings\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cspan class=\"version-support\"\u003e\n  Changing video settings in the admin panel was first supported in \u003ca href=\"https://github.com/owncast/owncast/releases/tag/v0.0.6\"\u003eOwncast 0.0.6\u003c/a\u003e.\n\u003c/span\u003e\n\n\u003ch2 id=\"custom-ports\"\u003eCustom Ports\u003c/h2\u003e\n\u003cp\u003ePer default, Owncast will run a \u003ccode\u003ehttp\u003c/code\u003e web server on port \u003ccode\u003e8080\u003c/code\u003e and a RTMP server on port \u003ccode\u003e1935\u003c/code\u003e. You can change the ports in the the admin. You must restart Owncast for these changes to take effect.\u003c/p\u003e\n\u003cp\u003eYou can also set the port for the web server on the command line via the \u003ccode\u003e-webserverport\u003c/code\u003e flag.\u003c/p\u003e\n\u003cp\u003e\u003cfigure\u003e\n    \u003cimg src=\"/docs/img/admin-server-settings.png\"\n         alt=\"Owncast server settings\" width=\"80%\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003eOwncast server settings\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cspan class=\"version-support\"\u003e\n  Custom ports was first supported in \u003ca href=\"https://github.com/owncast/owncast/releases/tag/v0.0.4\"\u003eOwncast 0.0.4\u003c/a\u003e.\n\u003c/span\u003e\n\n\u003cspan class=\"version-support\"\u003e\n  Port settings in the admin panel was first supported in \u003ca href=\"https://github.com/owncast/owncast/releases/tag/v0.0.6\"\u003eOwncast 0.0.6\u003c/a\u003e.\n\u003c/span\u003e\n\u003c/p\u003e\n\u003ch2 id=\"external-storage-providers\"\u003eExternal storage providers\u003c/h2\u003e\n\u003cp\u003eInstead of serving video directly from your personal server you can use a S3 compatible storage provider to offload the bandwidth and storage requirements elsewhere. \u003ca href=\"/docs/storage\"\u003eSee how to configure the storage provider of your choice\u003c/a\u003e.\u003c/p\u003e\n"},{"title":"Embedding into your site","date_published":"0001-01-01T00:00:00Z","date_modified":"2021-03-04T19:44:34-08:00","id":"/docs/embed/","url":"/docs/embed/","content_html":"\u003cdiv class=\"alert alert-warning d-flex\" role=\"alert\"\u003e\n  \u003cdiv class=\"flex-shrink-1 alert-icon\"\u003e💡\u003c/div\u003e\n  \u003cdiv class=\"w-100\"\u003eEmbedding Owncast into an existing page who is using HTTPS will require your Owncast server to also be secured with SSL.\u003c/div\u003e\n\u003c/div\u003e\n\u003ch2 id=\"embedding-video\"\u003eEmbedding video\u003c/h2\u003e\n\u003cp\u003eOwncast supports embedding your video stream directly into any other web site or source without having to setup a player.\u003c/p\u003e\n\u003cp\u003eThe video-only URL to your stream content lives at: \u003ccode\u003ehttp://your.host/embed/video\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eHere\u0026rsquo;s some example HTML you can use.\u003c/p\u003e\n\u003cp\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eiframe\u003c/span\u003e\n  \u003cspan class=\"na\"\u003esrc\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://your.host/embed/video\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"na\"\u003etitle\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Owncast\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eheight\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;350px\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003ewidth\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;550px\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ereferrerpolicy\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;origin\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"na\"\u003escrolling\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;no\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eallowfullscreen\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eiframe\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cspan class=\"version-support\"\u003e\n  Embedding video was first supported in \u003ca href=\"https://github.com/owncast/owncast/releases/tag/v0.0.2\"\u003eOwncast 0.0.2\u003c/a\u003e.\n\u003c/span\u003e\n\u003c/p\u003e\n\u003cp\u003eIt will look something like:\u003c/p\u003e\n\u003ciframe src=\"https://watch.owncast.online/embed/video\" title=\"Owncast\"\nheight=\"350px\" width=\"550px\"\nreferrerpolicy=\"origin\" scrolling=\"no\"\nallowfullscreen\u003e\n\u003c/iframe\u003e\n\u003ch2 id=\"embedding-chat\"\u003eEmbedding chat\u003c/h2\u003e\n\u003cp\u003eOwncast supports embedding your chat directly into any other web site or source.\u003c/p\u003e\n\u003cp\u003eThe chat-only URL lives at: \u003ccode\u003ehttp://your.host/embed/chat\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eOne common use is adding the chat into your live stream.\u003c/p\u003e\n\u003ch3 id=\"using-obs\"\u003eUsing OBS\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eClick the \u003ccode\u003e+\u003c/code\u003e or right mouse click to add a new source. Choose \u003ccode\u003eBrowser\u003c/code\u003e from the list.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFor a new source, you will need to add the name. Type in \u0026ldquo;\u003cem\u003eChat\u003c/em\u003e\u0026rdquo;.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIn the Browser Source settings, you will need to change the URL to your Owncast instance\u0026rsquo;s \u003ccode\u003e/embed/chat\u003c/code\u003e url.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eYou can use the \u003cem\u003eCustom CSS\u003c/em\u003e to tweak how the browser shows in your video. The following example will add some space around the box, give it a semi-transparent dark background; and increase the overall font size to a base unit of 24px. You may change any of these settings to fit your presentation layout. Note that the overall message text color is white.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-css\" data-lang=\"css\"\u003e   \u003cspan class=\"nt\"\u003ehtml\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n   \u003cspan class=\"k\"\u003emargin\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"kt\"\u003epx\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n   \u003cspan class=\"k\"\u003epadding\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"kt\"\u003epx\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n   \u003cspan class=\"k\"\u003ebackground-color\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003ergba\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mf\"\u003e0.5\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n   \u003cspan class=\"k\"\u003efont-size\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e24\u003c/span\u003e\u003cspan class=\"kt\"\u003epx\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n   \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n   \u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eClick ‘OK’ to save your chat settings and re-position the new chat source in your scene.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cspan class=\"version-support\"\u003e\n  Embedding chat was first supported in \u003ca href=\"https://github.com/owncast/owncast/releases/tag/v0.0.2\"\u003eOwncast 0.0.2\u003c/a\u003e.\n\u003c/span\u003e\n\n\u003ch2 id=\"ssl-requirements\"\u003eSSL Requirements\u003c/h2\u003e\n\u003cp\u003eEmbedding Owncast content that is not served via HTTPS will be \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Mixed_content/How_to_fix_website_with_mixed_content\"\u003eblocked by browsers\u003c/a\u003e if you embed it within a page that is using SSL. \u003ca href=\"/docs/sslproxies\"\u003eLearn how you can use a SSL Proxy\u003c/a\u003e to fulfill this browser requirement as well as secure your Owncast site.\u003c/p\u003e\n"},{"title":"Run as a system service","date_published":"0001-01-01T00:00:00Z","date_modified":"2021-03-26T13:39:10-07:00","id":"/docs/systemservice/","url":"/docs/systemservice/","content_html":"\u003cp\u003eYou can optionally setup Owncast to run under \u003ca href=\"https://systemd.io/\"\u003esystemd\u003c/a\u003e so it\u0026rsquo;s a managed service on your machine that automatically starts when your machine does.\u003c/p\u003e\n\u003cp\u003eA full example can be found \u003ca href=\"https://github.com/owncast/owncast/blob/master/examples/owncast-sample.service\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-ini\" data-lang=\"ini\"\u003e\u003cspan class=\"k\"\u003e[Unit]\u003c/span\u003e\n\u003cspan class=\"na\"\u003eDescription\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003eOwncast\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis is where the \u0026ldquo;functional\u0026rdquo; parts of the service live.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-ini\" data-lang=\"ini\"\u003e\u003cspan class=\"k\"\u003e[Service]\u003c/span\u003e\n\u003cspan class=\"na\"\u003eType\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003esimple\u003c/span\u003e\n\u003cspan class=\"na\"\u003eWorkingDirectory\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e[path_to_owncast_root_directory]\u003c/span\u003e\n\u003cspan class=\"na\"\u003eExecStart\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e[path_to_owncast_executable]\u003c/span\u003e\n\u003cspan class=\"na\"\u003eRestart\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003eon-failure\u003c/span\u003e\n\u003cspan class=\"na\"\u003eRestartSec\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e5\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003ccode\u003eWorkingDirectory\u003c/code\u003e should be where you want the owncast folder to live.\u003c/p\u003e\n\u003ch3 id=\"example\"\u003eExample\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eWorkingDirectory=/home/myuser/owncast\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eSimilarly the \u003ccode\u003eExecStart\u003c/code\u003e is the actual owncast binary.\u003c/p\u003e\n\u003ch3 id=\"example-1\"\u003eExample\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eExecStart=/home/myuser/owncast/owncast\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-ini\" data-lang=\"ini\"\u003e\u003cspan class=\"k\"\u003e[Install]\u003c/span\u003e\n\u003cspan class=\"na\"\u003eWantedBy\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003emulti-user.target\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"installation\"\u003eInstallation\u003c/h3\u003e\n\u003cp\u003eJust create the file in your systemd configuration directory (typically /etc/systemd/system/), and update the systemd daemon with:\n\u003ccode\u003esudo systemctl daemon-reload\u003c/code\u003e\u003c/p\u003e\n"},{"title":"Troubleshooting","date_published":"0001-01-01T00:00:00Z","date_modified":"2021-03-31T21:49:43Z","id":"/docs/troubleshooting/","url":"/docs/troubleshooting/","content_html":"\u003ch2 id=\"cpu-and-ram-usage-alerts\"\u003eCPU and RAM usage alerts\u003c/h2\u003e\n\u003cp\u003eIf your hardware is being maxed out then your video may not be processed and delivered fast enough to keep up with the real-time requirements of live video.\u003c/p\u003e\n\u003cp\u003eHere are some steps you can try taking to resolve this.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eYou may have too many video outputs defined in your settings. Try limiting yourself to a single output, and go from there.\u003c/li\u003e\n\u003cli\u003eChange your settings to use \u003ca href=\"/docs/encoding/#cpu-usage\"\u003eless cpu\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eTry reducing \u003ca href=\"/docs/encoding/#how-you-configure-your-broadcasting-software-matters\"\u003ethe quality of the video you\u0026rsquo;re sending to Owncast in your broadcasting software\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eExperiment with reducing the bitrate and framerate of your video.\u003c/li\u003e\n\u003cli\u003eIf you\u0026rsquo;ve gone down to a single output, changed to using less cpu, and experimented with different qualities in your broadcasting software, it\u0026rsquo;s possible the server you\u0026rsquo;re running Owncast is just not powerful enough for the task and you might need to try a different environment to run this on.\u003c/li\u003e\n\u003cli\u003eYou may want to experiment with enabling \u003ca href=\"/docs/video/#video-passthrough\"\u003evideo passthrough\u003c/a\u003e, where your video is not re-encoded. However, this may not be a solution in all environments. \u003ca href=\"/docs/video/#video-passthrough\"\u003eRead more\u003c/a\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eIn general, the easiest way to save CPU is to decrease the input size, decrease the output size, or both.\u003c/p\u003e\n\u003ch2 id=\"buffering-and-video-playback-issues\"\u003eBuffering and video playback issues\u003c/h2\u003e\n\u003cp\u003eMany things can be responsible for buffering and issues with the video playback. Here are some things to look into.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMake sure your \u003cstrong\u003ehardware is not throwing errors\u003c/strong\u003e as detailed above.\u003c/li\u003e\n\u003cli\u003eMake sure your broadcasting computer is broadcasting live video reliably. If your own computer or network connection is having a hard time getting video to the internet then viewers will be stuck in a buffering state. \u003cstrong\u003eReduce the bitrate, resolution and/or framerate in your broadcasting software\u003c/strong\u003e on your computer or mobile device if needed.\u003c/li\u003e\n\u003cli\u003eTry \u003cstrong\u003eincreasing your latency buffer\u003c/strong\u003e in your settings. This will start the user further behind live but give the client more playable video before it gets stuck waiting for the live edge.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eChange your video settings\u003c/strong\u003e to use \u003ca href=\"/docs/encoding/#cpu-usage\"\u003eless cpu\u003c/a\u003e for encoding video. Possibly \u003ca href=\"/docs/video/#video-passthrough\"\u003etry passthrough\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eReduce your \u003ca href=\"/docs/configuration/#video-quality\"\u003estream quality settings\u003c/a\u003e to a single output and a lower \u003ca href=\"/docs/encoding/#bitrate\"\u003ebitrate\u003c/a\u003e. Experiment with increasing the bitrate and adding another optional stream output once you find settings that work for you.\u003c/li\u003e\n\u003cli\u003eIf you are using external storage, \u003cstrong\u003emake sure you\u0026rsquo;re able to upload to this storage service fast enough\u003c/strong\u003e. See below.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo gain some insight into how your stream is performing for people, put your stream URL (https://yourserver/hls/stream.m3u8) into \u003ca href=\"https://hlsanalyzer.com/\"\u003eHLS Analyzer\u003c/a\u003e to get a nice overview. You can see any errors or warnings from the end user\u0026rsquo;s point of view by looking at its results.\u003c/p\u003e\n\u003ch2 id=\"slow-uploads-to-external-storage\"\u003eSlow uploads to external storage\u003c/h2\u003e\n\u003cp\u003eIf you have a slow upload connection, or are uploading to an external storage service that is too far away, or not optimized for fast uploads, you may run into an issue where it takes too long to get the video segments uploaded, ultimately not making them available fast enough for them to be used.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eDetermine if there\u0026rsquo;s another endpoint for your storage service that might be geographically closer to you.\u003c/li\u003e\n\u003cli\u003eUse a storage service that\u0026rsquo;s as close (physically and logically) to where your Owncast instance is. For example if if you\u0026rsquo;re on an AWS machine, use a S3 bucket in the same region. If you\u0026rsquo;re on Digital Ocean, try DO Spaces. But maybe don\u0026rsquo;t use DO Spaces if you\u0026rsquo;re on a Linode machine, use Linode Object Storage instead. Run owncast with \u003ccode\u003e--enableVerboseLogging\u003c/code\u003e to see if you get any slow upload warnings.\u003c/li\u003e\n\u003cli\u003eTry to increase your upload speed from your server provider.\u003c/li\u003e\n\u003cli\u003eFind out if your storage service offers something like \u003ca href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html\"\u003eAWS\u0026rsquo;s Transfer Acceleration\u003c/a\u003e to (possibly) try to increase the speed of uploads.\u003c/li\u003e\n\u003cli\u003eReduce the quality of your video so the video segments are smaller and will take less time to upload. See the above tips for speeding up encoding.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"reducing-the-delay-between-the-viewer-and-live\"\u003eReducing the delay between the viewer and live\u003c/h2\u003e\n\u003cp\u003eTry decreasing your latency level in the admin. This will keep the user closer to live, but give the client less playable segments to work with, possibly \u003cstrong\u003ereducing the resiliency for errors\u003c/strong\u003e and network speed issues. If you have a machine that is able to process video quickly you may be able to get down to only a handful of seconds of latency, but with little room for error.\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s up to you to decide you want lower delays over \u003cstrong\u003eless reliability\u003c/strong\u003e or a more reliable stream with additional delay.\u003c/p\u003e\n\u003ch2 id=\"chat-is-disabled\"\u003eChat is disabled\u003c/h2\u003e\n\u003cp\u003eThe chat is only enabled when a stream is active. This is to stop drive-by spammy chat messages by people when no stream is taking place.\u003c/p\u003e\n\u003cp\u003eIf you\u0026rsquo;re using a proxy in front of your Owncast instance make sure it is configured properly to support websockets. By default some do not pass along the websocket properly. Read \u003ca href=\"/docs/sslproxies\"\u003eyour proxy documentation\u003c/a\u003e to make sure websocket support is configured properly to support Owncast chat.\u003c/p\u003e\n\u003ch2 id=\"misc-video-issues\"\u003eMisc video issues\u003c/h2\u003e\n\u003cp\u003eIf you\u0026rsquo;re running into random video stability issues look at some of these common issues:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMake sure you\u0026rsquo;re running a supported version of ffmpeg. \u003ca href=\"https://ffmpeg.org/download.html\"\u003eDownload ffmpeg 4.1.5 or above\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eMake sure your copy of ffmpeg was not installed via Snap packages, as the sandboxing of Snap distributed software isn\u0026rsquo;t compatible in this case. If you see the error \u003ccode\u003eError: unable to open display\u003c/code\u003e, this might be your problem.\u003c/li\u003e\n\u003cli\u003eTake a look at \u003ccode\u003etranscoder.log\u003c/code\u003e for any errors.\u003c/li\u003e\n\u003cli\u003eIf you see \u003ccode\u003eUnrecognized option var_stream_map\u003c/code\u003e in \u003ccode\u003etranscoder.log\u003c/code\u003e it also means you need to update your copy of ffmpeg.\u003c/li\u003e\n\u003cli\u003eMake sure you have \u003ca href=\"/docs/video/#video-passthrough\"\u003evideo passthrough\u003c/a\u003e disabled.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"your-software-says-your-key-is-incorrect\"\u003eYour software says your key is incorrect.\u003c/h2\u003e\n\u003cp\u003eIf your broadcasting software says your streaming key is incorrect, but you\u0026rsquo;re sure it\u0026rsquo;s not, verify you\u0026rsquo;re not using any \u003ca href=\"https://tools.ietf.org/html/rfc3986#section-2.1\"\u003eURL-unsafe characters\u003c/a\u003e in your key. Characters such as \u003ccode\u003e[ ] { } ? | \\ / ” % ~ # \u0026lt; \u0026gt;\u003c/code\u003e are particularly problematic as your broadcasting software may not be encoding them properly.\u003c/p\u003e\n\u003ch2 id=\"your-stream-looks-low-quality\"\u003eYour stream looks low-quality\u003c/h2\u003e\n\u003cp\u003eYour stream, at the very least, is only as good as what you\u0026rsquo;re sending to Owncast. So make sure you\u0026rsquo;re sending from your broadcasting software at a quality that you\u0026rsquo;re happy with. You may also want to increase the amount of CPU being used to process the video on your Owncast server. As you go lower you will visibly see the quality degrade. However, make sure your server can handle more CPU being used or you\u0026rsquo;ll experience different problems.\u003c/p\u003e\n\u003ch2 id=\"server-is-not-showing-up-in-the-directory\"\u003eServer is not showing up in the directory\u003c/h2\u003e\n\u003cp\u003eIf you\u0026rsquo;ve enabled the directory in your admin setttings, \u003ca href=\"/docs/directory/#if-your-server-is-not-showing-up-in-the-directory\"\u003elook at some next steps\u003c/a\u003e if it\u0026rsquo;s not working.\u003c/p\u003e\n\u003cspan class=\"version-support\"\u003e\n  Owncast directory was first supported in \u003ca href=\"https://github.com/owncast/owncast/releases/tag/v0.0.3\"\u003eOwncast 0.0.3\u003c/a\u003e.\n\u003c/span\u003e\n\n\u003ch2 id=\"streams-without-audio-are-currently-not-supported\"\u003eStreams without audio are currently not supported\u003c/h2\u003e\n\u003cp\u003eIf you\u0026rsquo;re streaming content that has no audio component (such as a camera with no microphone, for example) you may run into issues. You\u0026rsquo;re only likely to run into this if you\u0026rsquo;re building a stream manually through something like ffmpeg. And in this case you can insert an audio stream that\u0026rsquo;s empty to resolve the issue.\u003c/p\u003e\n\u003cp\u003eAn example:\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003effmpeg -input_format h264 -f video4linux2 -s 1920x1080 -i /dev/video0 -f lavfi -i anullsrc -c:v copy -c:a aac -shortest -f flv rtmp://192.168.0.10/live/abc123\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"resetting-a-lost-stream-key\"\u003eResetting a lost stream key\u003c/h2\u003e\n\u003cp\u003eIf you change your stream key and forget to save it, or you lose it somehow, you can reset it on the command line by stopping owncast, and then running the following on the command line:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e./owncast --streamkey yournewstreamkey\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"restoring-a-backup\"\u003eRestoring a backup\u003c/h2\u003e\n\u003cp\u003eOwncast will backup its database periodically. You can keep these backups and restore them if needed. \u003ca href=\"/docs/backups\"\u003eLearn more about backups\u003c/a\u003e.\u003c/p\u003e\n"},{"title":"Web Site + Chat","date_published":"0001-01-01T00:00:00Z","date_modified":"2021-03-05T03:47:29Z","id":"/docs/website/","url":"/docs/website/","content_html":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eOwncast includes a web interface for your video with built-in chat that is available once you start the server. It shows online/offline states, viewer counts, stream duration, your instance\u0026rsquo;s description, images, links and more. You can just start using it without making any changes, but you\u0026rsquo;ll likely want to update the content displayed on your page by visiting your server admin page.\u003c/p\u003e\n\u003cp\u003eAdditionally, the web interface was specifically built to be editable by anybody comfortable tweaking a web page. It\u0026rsquo;s not bundled or transpiled into anything, it\u0026rsquo;s just HTML + Javascript + CSS that you can start editing. Feel free to add your own branding, links, change the colors in the CSS, fonts, layout, or anything else you could possibly want. No development environment is needed, just open the files in an editor and start tweaking.\u003c/p\u003e\n\u003cp\u003eIf you want to embed Owncast in your existing website, checkout our \u003ca href=\"/docs/embed/\"\u003edocumentation on embedding Owncast\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eBelow are some items you\u0026rsquo;ll likely want to customize to update the content that displays on your page.\u003c/p\u003e\n\u003cspan class=\"version-support\"\u003e\n  Changing settings in the admin panel was first supported in \u003ca href=\"https://github.com/owncast/owncast/releases/tag/v0.0.6\"\u003eOwncast 0.0.6\u003c/a\u003e.\n\u003c/span\u003e\n\n\u003ch3 id=\"name-and-description\"\u003eName and description\u003c/h3\u003e\n\u003cp\u003eBy setting your name, description and logo you can quickly update the contents of the website to reflect your stream.\u003c/p\u003e\n\u003cfigure\u003e\n    \u003cimg src=\"/docs/img/admin-general-settings.png\"\n         alt=\"Owncast general settings\" width=\"100%\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003eOwncast general settings\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003ch3 id=\"tags\"\u003eTags\u003c/h3\u003e\n\u003cp\u003eBy setting tags you\u0026rsquo;re showing potential viewers what categories of content you typically stream.\u003c/p\u003e\n\u003cfigure\u003e\n    \u003cimg src=\"/docs/img/admin-settings-tags-social.png\"\n         alt=\"Add tags\" width=\"100%\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003eAdd tags\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003ch3 id=\"external-social-links\"\u003eExternal social links\u003c/h3\u003e\n\u003cp\u003eYou can add links to your profiles on other sites by adding them in the admin.\n\u003cfigure\u003e\n    \u003cimg src=\"/docs/img/admin-settings-social-handle.png\"\n         alt=\"Add social links\" width=\"100%\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003eAdd social links\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003c/p\u003e\n\u003ch3 id=\"web-page-content\"\u003eWeb page content\u003c/h3\u003e\n\u003cp\u003eThe body of your page content can be customized in your admin. Use standard \u003ca href=\"https://www.markdownguide.org/basic-syntax/\"\u003eMarkdown syntax\u003c/a\u003e to add links, images, and more.\u003c/p\u003e\n\u003ch2 id=\"chat\"\u003eChat\u003c/h2\u003e\n\u003ch3 id=\"text-formatting\"\u003eText Formatting\u003c/h3\u003e\n\u003cp\u003eThe web chat supports some basic formatting using \u003ca href=\"https://www.markdownguide.org/basic-syntax/\"\u003eMarkdown\u003c/a\u003e:\u003c/p\u003e\n\u003cp\u003eItalic: \u003ccode\u003e*your text*\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eBold: \u003ccode\u003e**your text**\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eStrikethrough: \u003ccode\u003e~~your text~~\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eCode blocks: \u003ccode\u003e`your text`\u003c/code\u003e\u003c/p\u003e\n\u003ch3 id=\"custom-emoji\"\u003eCustom Emoji\u003c/h3\u003e\n\u003cp\u003ePlace your own custom emoji images into \u003ccode\u003e/webroot/img/emoji/\u003c/code\u003e and the next time you refresh the web site you\u0026rsquo;ll see your images in the emoji picker, available for use in chat.\u003c/p\u003e\n\u003cspan class=\"version-support\"\u003e\n  Emoji was first supported in \u003ca href=\"https://github.com/owncast/owncast/releases/tag/v0.0.2\"\u003eOwncast 0.0.2\u003c/a\u003e.\n\u003c/span\u003e\n\n"},{"title":"Video","date_published":"0001-01-01T00:00:00Z","date_modified":"2021-03-18T15:16:55-07:00","id":"/docs/video/","url":"/docs/video/","content_html":"\u003cp\u003eThis document aims to outline what is being done to your content and the different knobs you can tweak to get the best output for your instance.\u003c/p\u003e\n\u003cdiv class=\"alert alert-warning d-flex\" role=\"alert\"\u003e\n  \u003cdiv class=\"flex-shrink-1 alert-icon\"\u003e💡\u003c/div\u003e\n  \u003cdiv class=\"w-100\"\u003eKeep in mind it's hard to give specific settings that will give you the best quality and performance with Owncast because people have different servers and requirements.\u003c/div\u003e\n\u003c/div\u003e\n\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003eConfigure your broadcasting software to send a stream to Owncast that is reasonably close to what you expect to send to your viewers. \u003ca href=\"/docs/video/#how-you-configure-your-broadcasting-software-matters\"\u003eHow you configure your broadcasting software matters\u003c/a\u003e. Don\u0026rsquo;t tell OBS to send to Owncast at 7000k at 60fps if you only expect to support bitrates of 4000k and 2000k at 30fps.\u003c/li\u003e\n\u003cli\u003eStart with a single \u003ca href=\"/docs/video/#things-you-can-configure\"\u003eoutput configuration\u003c/a\u003e with average settings. Test it. See how your hardware handles it. If you want to, and are able to, then add another and test that. Repeat until you arrive at the configuration you want to offer your viewers and that your hardware can handle.\u003c/li\u003e\n\u003cli\u003eIf your hardware can\u0026rsquo;t handle your current configuration then reduce the number of output variants to only a single one, \u003ca href=\"/docs/video/#how-you-configure-your-broadcasting-software-matters\"\u003ereduce the quality of video you\u0026rsquo;re sending to Owncast\u003c/a\u003e, reduce your \u003ca href=\"/docs/video/#framerate\"\u003eframerate\u003c/a\u003e, and reduce the \u003ca href=\"/docs/video/#cpu-usage\"\u003eCPU usage\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"your-stream-can-be-played-outside-of-your-web-site\"\u003eYour stream can be played outside of your web site.\u003c/h2\u003e\n\u003cp\u003eBecause Owncast uses the HLS standard, almost any video player can play your stream. Quicktime, VLC, mpv, etc. You could even build your own app that plays it. You can access your stream directly on your server by putting the path of \u003ccode\u003e/hls/stream.m3u8\u003c/code\u003e into your player. For example: \u003ccode\u003ehttps://owncast.mydomain.com/hls/stream.m3u8\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id=\"how-does-an-owncast-video-stream-work\"\u003eHow does an Owncast video stream work?\u003c/h2\u003e\n\u003cp\u003eOwncast takes your source stream and converts it to short, individual video segments. A list of these segments is supplied to your viewer\u0026rsquo;s player and will read and play all the segments in order. This is using a specification called \u003ca href=\"https://developer.apple.com/documentation/http_live_streaming/understanding_the_http_live_streaming_architecture\"\u003eHLS\u003c/a\u003e or HTTP Live Streaming. You can optionally generate multiple different qualities of video to allow lower bandwidth options. This is called \u003ca href=\"https://en.wikipedia.org/wiki/Adaptive_bitrate_streaming\"\u003eAdaptive bitrate streaming\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis video from Jon Dahl is gives a very good overview of internet video, starting with \u003cem\u003e\u0026ldquo;what happens when you press play in your web browser?\u0026quot;\u003c/em\u003e and touching on every piece of the stack, backend and frontend. It translates very well to how Owncast works and is suggested if you want to learn more.\u003c/p\u003e\n\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n  \u003ciframe src=\"https://www.youtube.com/embed/rb83esfHnW8?start=539\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" allowfullscreen title=\"YouTube Video\"\u003e\u003c/iframe\u003e\n\u003c/div\u003e\n\n\u003cp\u003eIn this case Owncast works as the Media encoder, Stream segmenter, and distribution web server. However \u003ca href=\"/docs/storage\"\u003eOwncast supports video being distributed via 3rd party storage as well\u003c/a\u003e, so in that case the video segments would be distributed from there, instead.\u003c/p\u003e\n\n\n\u003cdiv style=\"text-align: center;\"\u003e\n    \u003cfigure \u003e\n        \n            \u003cimg src=\"https://docs-assets.developer.apple.com/published/88e87744a3/de18e941-81de-482f-843d-834a4dd3aa71.png\" width=\"100%\" loading=\"lazy\" /\u003e\n            \n        \n    \u003c/figure\u003e\n    \u003c/div\u003e\n\u003ch4 id=\"things-to-keep-in-mind\"\u003eThings to keep in mind.\u003c/h4\u003e\n\u003col\u003e\n\u003cli\u003eThe more work you need done to convert the video from one size, quality or format to another the more it will slow everything else down.\u003c/li\u003e\n\u003cli\u003eThe slower things go the slower the stream is provided to the user.\u003c/li\u003e\n\u003cli\u003eIf stream is provided to the user too slowly they\u0026rsquo;ll start seeing buffering and errors.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eHere\u0026rsquo;s what knobs can be tweaked when trying to determine the quality or qualities you want to provide your user while balancing the amount of server resources you\u0026rsquo;re consuming.\u003c/p\u003e\n\u003ch2 id=\"things-you-can-configure\"\u003eThings you can configure\u003c/h2\u003e\n\u003ch3 id=\"bitrate\"\u003eBitrate\u003c/h3\u003e\n\u003cp\u003eThe bitrate is the amount of data you send when you stream. A higher bitrate takes up more available internet bandwidth and create larger sized segments of video, making it take longer for viewers to download. Increasing your bitrate can improve your video quality, but only up to a certain point.\u003c/p\u003e\n\u003ch3 id=\"resolution\"\u003eResolution\u003c/h3\u003e\n\u003cp\u003eResolution refers to the size of a video on a screen. Like bitrates you can provide multiple different sizes for different cases, but asking to resize a video amounts in additional work that needs to be performed.\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s recommended if you have to change the size to only change the width \u003cstrong\u003eor\u003c/strong\u003e the height, and it\u0026rsquo;ll keep the correct aspect ratio for you. If you change both the width and the height you may be changing the aspect ratio of the video you may end up with a squished picture if you don\u0026rsquo;t set it correctly.\u003c/p\u003e\n\u003ch3 id=\"framerate\"\u003eFramerate\u003c/h3\u003e\n\u003cp\u003eFramerate is the number of frames per second in the video. Owncast defaults to 24fps, but other common framerates are 30 or 60. Increasing the framerate will use more CPU on your server, and more bandwidth for your users as more frames of video have to be processed and made available to your viewers any given second.\u003c/p\u003e\n\u003ch3 id=\"cpu-usage\"\u003eCPU Usage\u003c/h3\u003e\n\u003cp\u003eThe more CPU you use the better the output image will be, or the smaller of a file the output will be for the same quality. However, you will need to balance the amount of CPU you have available with the amount you can use to process video.\u003c/p\u003e\n\u003ch3 id=\"latency-buffer\"\u003eLatency Buffer\u003c/h3\u003e\n\u003cp\u003eYou have some control over the live latency between the broadcaster and the viewer. While it\u0026rsquo;s completely understandable to want to have as little latency as possible you may need to increase the latency buffer if you\u0026rsquo;re experiencing issues. In general the lower the latency the less buffer is available for any possible slow transfers, network blips or errors.\u003c/p\u003e\n\u003cdiv class=\"alert alert-warning d-flex\" role=\"alert\"\u003e\n  \u003cdiv class=\"flex-shrink-1 alert-icon\"\u003e💡\u003c/div\u003e\n  \u003cdiv class=\"w-100\"\u003eIf you require real-time, video conferencing style latency you may want to look for a different solution that doesn't use HLS video, as this scaling and distribution model will never get to sub-second levels.\u003c/div\u003e\n\u003c/div\u003e\n\u003ch3 id=\"video-passthrough\"\u003eVideo Passthrough\u003c/h3\u003e\n\u003cdiv class=\"alert alert-warning d-flex\" role=\"alert\"\u003e\n  \u003cdiv class=\"flex-shrink-1 alert-icon\"\u003e💡\u003c/div\u003e\n  \u003cdiv class=\"w-100\"\u003eTurning on video passthrough may make your stream unplayable. Read about Video Passthrough before turning it on and learn about the risks involved.\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003eOwncast has an optional setting to turn off re-encoding of your inbound stream, potentially saving substantial hardware utilization and supporting a higher quality stream with less resources. \u003cspan style=\"color: red;\"\u003e \u003cstrong\u003eHowever\u003c/strong\u003e, because your video will not be re-encoded it\u0026rsquo;s possible that certain video from certain sources may end up \u003cstrong\u003enot being playable at all\u003c/strong\u003e\u003c/span\u003e. This is the risk of enabling this.\u003c/p\u003e\n\u003cp\u003eTo enable, visit the advanced settings for a specific stream output. You can turn on \u0026ldquo;Video Passthrough\u0026rdquo;.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eTurn it on if you require it.\u003c/li\u003e\n\u003cli\u003eTest it.\u003c/li\u003e\n\u003cli\u003eIf your video won\u0026rsquo;t play, \u003cstrong\u003ethen turn it off\u003c/strong\u003e.\u003c/li\u003e\n\u003cli\u003eOnly one output should be set as \u0026ldquo;passthrough\u0026rdquo;.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eIf you find you require this feature, but it\u0026rsquo;s not working for you, you \u003cem\u003emay\u003c/em\u003e be able to change to a different broadcasting client solution to send video to Owncast differently. For example, if you\u0026rsquo;re using Restream, video passthrough will not work, but in general it\u0026rsquo;s worked for people streaming from OBS.\u003c/p\u003e\n\u003ch2 id=\"audio\"\u003eAudio\u003c/h2\u003e\n\u003cp\u003eWhat you\u0026rsquo;re sending from your broadcasting software is generally reasonable and additional conversion isn\u0026rsquo;t required, even for low-bandwidth viewers. Owncast will not change the audio stream and instead just pass it along to the end users to save additional work being performed.\u003c/p\u003e\n\u003ch2 id=\"how-you-configure-your-broadcasting-software-matters\"\u003eHow you configure your broadcasting software matters.\u003c/h2\u003e\n\u003cp\u003eThe more you send to Owncast, the more work it has do. This means you should generally not stream to Owncast at a significantly higher or lower quality than you expect to give to your viewers. It makes no sense to stream to Owncast at 6000k 60fps if you\u0026rsquo;re telling Owncast to send to your viewers at 3000k 30fps, because your server has to do that conversion. On the other hand it makes no sense to stream to Owncast with a 1000k bitrate and then send to your viewers at 4000k, that would be wasted work and bandwidth.\u003c/p\u003e\n\u003cp\u003eSo in short: Try to reasonably figure out what you want to stream to your users and match that as best as possible when setting up your broadcasting software.\u003c/p\u003e\n\u003cp\u003eIf you find yourself trying to squeeze better performance out of Owncast then try setting your broadcasting software to a lower quality as well as lowering the quality in your Owncast instance.\u003c/p\u003e\n\u003ch2 id=\"cpu-usage-1\"\u003eCPU Usage\u003c/h2\u003e\n\u003cp\u003eEach stream output variant adds significant CPU usage and slows down the overall generation of video segments. If you have a slow server running Owncast you should probably only have one bitrate variant in play. If you add more and you notice that playback becomes choppy it\u0026rsquo;s likely that everything is running too slowly for consistent playback. Consider removing the additional variants and tweaking your single variant so it supports a wider variety of network conditions.\u003c/p\u003e\n\u003ch2 id=\"disk-usage\"\u003eDisk Usage\u003c/h2\u003e\n\u003cp\u003eMore stream output variants requires more disk space, since it\u0026rsquo;s another copy of the video on disk. If you\u0026rsquo;re serving video locally and you have enough disk space then it\u0026rsquo;s probably no big deal and files will rather quickly get rotated and cleaned up. If you\u0026rsquo;re using something like \u003ca href=\"/docs/storage/\"\u003eS3 for storage\u003c/a\u003e then files won\u0026rsquo;t get cleaned up until some point in the future, so you\u0026rsquo;ll have more remote storage use in play.\u003c/p\u003e\n"},{"title":"The Directory","date_published":"0001-01-01T00:00:00Z","date_modified":"2021-02-20T16:27:18-08:00","id":"/docs/directory/","url":"/docs/directory/","content_html":"\u003cp\u003eTo help people discover streams by people using Owncast we have an optional Owncast directory you can add yourself to.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eVisit the \u003cstrong\u003e\u0026ldquo;General\u0026rdquo;\u003c/strong\u003e settings in the admin.\u003c/li\u003e\n\u003cli\u003eSet the public URL to your Owncast instance that you want people to be linked to.\u003c/li\u003e\n\u003cli\u003eSet the \u003cstrong\u003e\u0026ldquo;About\u0026rdquo;\u003c/strong\u003e with a brief description of your stream.\u003c/li\u003e\n\u003cli\u003eSet the \u003cstrong\u003etags\u003c/strong\u003e associated with the content you stream.\u003c/li\u003e\n\u003cli\u003eMark if your content is \u003cem\u003eNot Safe For Work\u003c/em\u003e (nsfw).\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"alert alert-warning d-flex\" role=\"alert\"\u003e\n  \u003cdiv class=\"flex-shrink-1 alert-icon\"\u003e💡\u003c/div\u003e\n  \u003cdiv class=\"w-100\"\u003eThis directory is operated as a complimentary service by the Owncast project to share people's streams. There is no obligation to list any specific server or topic. Any server can be removed at any time for any reason.\u003c/div\u003e\n\u003c/div\u003e\n\u003ch2 id=\"if-your-server-is-not-showing-up-in-the-directory\"\u003eIf your server is not showing up in the directory\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003eIt\u0026rsquo;s opt-in, so make sure you follow the \u003ca href=\"/docs/directory\"\u003econfiguration directions\u003c/a\u003e to enable the directory for your server.\u003c/li\u003e\n\u003cli\u003eIt will take approximately 5min for your server to show up the first time you stream after enabling this feature.\u003c/li\u003e\n\u003cli\u003eYou may want to run your server with \u003ccode\u003eowncast --enableVerboseLogging\u003c/code\u003e to see what errors show up.\u003c/li\u003e\n\u003cli\u003eIf you used to be listed, but no longer show up you may need to reset your registration to the server in the admin\u0026rsquo;s Server Settings.\u003c/li\u003e\n\u003cli\u003eIf you recently changed the URL of your server reset your registration in your Server Settings.\u003c/li\u003e\n\u003cli\u003eIf there\u0026rsquo;s some issue that\u0026rsquo;s causing you not to be listed \u003ca href=\"https://github.com/owncast/owncast/issues\"\u003eplease file a GitHub issue\u003c/a\u003e so we can help troubleshoot or reset your registration with the directory.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cspan class=\"version-support\"\u003e\n  Owncast directory was first supported in \u003ca href=\"https://github.com/owncast/owncast/releases/tag/v0.0.3\"\u003eOwncast 0.0.3\u003c/a\u003e.\n\u003c/span\u003e\n\n"},{"title":"Viewer details","date_published":"0001-01-01T00:00:00Z","date_modified":"2021-03-05T01:05:55-08:00","id":"/docs/viewers/","url":"/docs/viewers/","content_html":"\u003cp\u003eOwncast can display high-level geographic information about your current viewers if you enable it in your instance.\u003c/p\u003e\n\u003cp\u003eYour server can optionally use the \u003ca href=\"https://dev.maxmind.com/geoip/geoip2/geolite2/\"\u003eMaxMind GeoLite2 Database\u003c/a\u003e. If you provide your own free copy of the database it will be used. Perform the following in order to add this feature.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"https://www.maxmind.com/en/geolite2/signup\"\u003eCreate a free account\u003c/a\u003e with MaxMind.\u003c/li\u003e\n\u003cli\u003eWait for an email and follow the link to your account.\u003c/li\u003e\n\u003cli\u003eUnder \u003ccode\u003eDatabase Products and Subscriptions\u003c/code\u003e click \u003ccode\u003eDownload Databases\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eDownload \u003ccode\u003eGeoLite2 City (GeoIP2 Binary .mmdb)\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eUnzip the file and place the \u003ccode\u003eGeoLite2-City.mmdb\u003c/code\u003e file into the \u003ccode\u003edata\u003c/code\u003e directory of your Owncast server. Create this directory if needed.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cspan class=\"version-support\"\u003e\n  Location support was first supported in \u003ca href=\"https://github.com/owncast/owncast/releases/tag/v0.0.3\"\u003eOwncast 0.0.3\u003c/a\u003e.\n\u003c/span\u003e\n\n\u003ch2 id=\"disclaimer\"\u003eDisclaimer\u003c/h2\u003e\n\u003cp\u003eIf enabled this product includes GeoLite2 data created by MaxMind, available from\n\u003ca href=\"https://www.maxmind.com\"\u003e\u003ca href=\"https://www.maxmind.com\"\u003ehttps://www.maxmind.com\u003c/a\u003e\u003c/a\u003e.\u003c/p\u003e\n"},{"title":"Building from Source","date_published":"0001-01-01T00:00:00Z","date_modified":"2021-03-05T01:05:55-08:00","id":"/docs/building/","url":"/docs/building/","content_html":"\u003col\u003e\n\u003cli\u003eEnsure you have the gcc compiler installed for your system.\u003c/li\u003e\n\u003cli\u003eInstall the \u003ca href=\"https://golang.org/dl/\"\u003eGo toolchain\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eClone the repo. \u003ccode\u003egit clone https://github.com/owncast/owncast\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ego run main.go pkged.go\u003c/code\u003e will run the application.\u003c/li\u003e\n\u003cli\u003eStart a stream to your local instance \u003ca href=\"/quickstart/startstreaming/\"\u003eusing your broadcasting software\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eA basic test can be run by running \u003ccode\u003e ./test/ocTestStream.sh test/automated/test.mp4\u003c/code\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"using-docker\"\u003eUsing Docker\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003eDownload the code: \u003ccode\u003egit clone https://github.com/owncast/owncast\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eMake any \u003ca href=\"/docs/configuration\"\u003econfiguration\u003c/a\u003e changes.\u003c/li\u003e\n\u003cli\u003eIf you ever make any future config file changes you must rerun the \u003ccode\u003edocker build\u003c/code\u003e step otherwise you can just run the \u003ccode\u003edocker run\u003c/code\u003e step to run the service going forward.\u003c/li\u003e\n\u003cli\u003eRun \u003ccode\u003edocker build -t owncast .\u003c/code\u003e and wait. It may take a few minutes to build depending on the speed of your server.\u003c/li\u003e\n\u003cli\u003eRun \u003ccode\u003edocker run -p 8080:8080 -p 1935:1935 -it owncast\u003c/code\u003e to start the service with your custom configuration.\u003c/li\u003e\n\u003c/ol\u003e\n"},{"title":"Scaling Owncast","date_published":"0001-01-01T00:00:00Z","date_modified":"2021-03-04T19:44:34-08:00","id":"/docs/scaling/","url":"/docs/scaling/","content_html":"\u003ch2 id=\"disclaimer\"\u003eDisclaimer\u003c/h2\u003e\n\u003cp\u003eOwncast works great out of the box as a personal streaming service. The ease of install and all-in-one architecture allows for people to get up and running quickly. The downside of this is it requires a bit more thought around large deployments, as you can\u0026rsquo;t just run more copies of Owncast for scale.\u003c/p\u003e\n\u003cp\u003eIf you are not familiar with the topics below, or you don\u0026rsquo;t feel comfortable with the following steps it\u0026rsquo;s unlikely you should be taking on the additional responsibility of a larger deployment of any service. \u003cstrong\u003eBasic system administration experience and understanding of the architecture is generally expected when trying to squeeze additional performance out of anything\u003c/strong\u003e, and this might not be for you. Don\u0026rsquo;t feel bad. \u003cstrong\u003eOwncast will still work great for you out of the box\u003c/strong\u003e, but you might want to acquire some professional help if you need something more than that.\u003c/p\u003e\n\u003ch2 id=\"video\"\u003eVideo\u003c/h2\u003e\n\u003cp\u003eThe solution for scaling your video to a large number of concurrent viewers is to use the built-in support for \u003ca href=\"/docs/storage\"\u003eexternal storage services\u003c/a\u003e. This allows you to generate the video on your Owncast server, but serve it from a provider who has unlimited bandwidth and capacity at a low cost.\u003c/p\u003e\n\u003cp\u003eWith this setup you don\u0026rsquo;t need extra CPU or a more powerful server in order to support more viewers, as they don\u0026rsquo;t technically touch your server once the video begins.\u003c/p\u003e\n\u003ch2 id=\"chat\"\u003eChat\u003c/h2\u003e\n\u003cp\u003eScaling chat is more difficult, as Owncast is an all-in-one, single server solution. You\u0026rsquo;re limited by what your single server will be able to handle as far as open connections. You\u0026rsquo;re likely, with a little tweaking, to get many hundreds of people connected to chat. But if you\u0026rsquo;re looking at 1,000 or more, Owncast\u0026rsquo;s chat is likely not the correct solution for your use case.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eSteps\u003c/strong\u003e\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eYou will want to have a more powerful server (cpu, ram) in order to handle additional chat connections.\u003c/li\u003e\n\u003cli\u003eYou will need to increase the user\u0026rsquo;s maximum open resource limit on your machine (ulimit).\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eIf you get the \u003ccode\u003etoo many open files\u003c/code\u003e error it\u0026rsquo;s because your \u003ccode\u003eulimit\u003c/code\u003e value is lower than the number of open resources Owncast is trying to to use.\u003c/p\u003e\n\u003cp\u003eThe default for \u003ccode\u003eulimit -n\u003c/code\u003e is generally 1024, so you can increase from there by using the \u003ccode\u003eulimit\u003c/code\u003e command or editing your system files. \u003ca href=\"https://www.learnitguide.net/2015/07/how-to-increase-ulimit-values-in-linux.html\"\u003eHere is an overview of the different limits and how to change them\u003c/a\u003e. It\u0026rsquo;s beyond the scope of this documentation to go into detail of what numbers you should use and where to put them.\u003c/p\u003e\n"}]}