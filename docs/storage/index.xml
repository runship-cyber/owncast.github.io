<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>External storage on</title><link>/docs/storage/</link><description>Recent content in External storage on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="/docs/storage/index.xml" rel="self" type="application/rss+xml"/><item><title>AWS S3</title><link>/docs/storage/aws/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/storage/aws/</guid><description>AWS S3 is a good choice if you&amp;rsquo;re already using AWS for your server or are comfortable using AWS for other things. If you&amp;rsquo;re brand new to object storage and not using AWS already I&amp;rsquo;m not sure I&amp;rsquo;d recommend jumping into it just for Owncast. There are other options.
Here&amp;rsquo;s some example usage and pricing for AWS S3:
File expiration You should expire old segments on your S3 bucket.</description></item><item><title>Backblaze B2</title><link>/docs/storage/backblaze/</link><pubDate>Tue, 17 Nov 2020 20:11:42 +0100</pubDate><guid>/docs/storage/backblaze/</guid><description>As of November 2020 Backblaze&amp;rsquo;s B2 is fully S3 compatible.
B2&amp;rsquo;s first 10G of storage is free, and the first 1G of download per day is free after that. Afterwards they charge $0.01/G.
Keys When creating your &amp;ldquo;Application Keys&amp;rdquo; keep in mind that the &amp;ldquo;Application Key ID&amp;rdquo; is the &amp;ldquo;Access Key&amp;rdquo; and the &amp;ldquo;Application Key&amp;rdquo; is the &amp;ldquo;Secret&amp;rdquo;.
CORS settings While the specific origins you want to support are up to you, make sure the API for CORS support is set to either &amp;ldquo;S3&amp;rdquo; or &amp;ldquo;Both&amp;rdquo;.</description></item><item><title>Digital Ocean Spaces</title><link>/docs/storage/digitalocean/</link><pubDate>Tue, 17 Nov 2020 20:11:42 +0100</pubDate><guid>/docs/storage/digitalocean/</guid><description>250 GB storage + 1 TB Outbound Transfer for $5/mo.
Digital Ocean Spaces is a good choice if you&amp;rsquo;re already using DigitalOcean to host your server. It should be fast to transfer your video from your server to their storage service, and their pricing will probably just be the flat $5/mo for you, so it&amp;rsquo;s easy to know what you&amp;rsquo;re paying.
Create a new bucket in the DigitalOcean console. Edit your storage config and change the S3 endpoint to match the hostname listed below your newly created bucket that looks something like myvideo.</description></item><item><title>Wasabi</title><link>/docs/storage/wasabi/</link><pubDate>Tue, 17 Nov 2020 20:11:42 +0100</pubDate><guid>/docs/storage/wasabi/</guid><description>Most people would end up paying $5.99/mo with Wasabi, and there&amp;rsquo;s no additional costs for the amount of people or amount of times people access your video. So if you have a ton of viewers, this is probably a good option.
Create a user and access key. Create a new user on Wasabi for yourself. Create a new Access Key in the Users Panel. Update your Owncast config.json file with the above Access Key and Secret as well as the other required details.</description></item><item><title>Linode Object Storage</title><link>/docs/storage/linode/</link><pubDate>Tue, 17 Nov 2020 20:11:42 +0100</pubDate><guid>/docs/storage/linode/</guid><description>250 GB storage + 1 TB Outbound Transfer for $5/mo.
Linode Object Storage is a good choice if you&amp;rsquo;re already using Linode to host your server. It should be fast to transfer your video from your server to their storage service, and their pricing will probably just be the flat $5/mo for you, so it&amp;rsquo;s easy to know what you&amp;rsquo;re paying.
Create a new bucket at the Linode Object Storage admin page.</description></item><item><title>Minio</title><link>/docs/storage/minio/</link><pubDate>Tue, 17 Nov 2020 20:11:42 +0100</pubDate><guid>/docs/storage/minio/</guid><description>If you want to host the video segments on a self hosted S3 compatible MinIO server, you get even more control over your data.
Bucket Create a bucket, e.g. with the MinIO client by
get the two strings [YOUR-ACCESS-KEY] and [YOUR-SECRET-KEY] from your MinIO deployment. (Sometimes they are referred to as ROOT USER and KEY) add an alias mc alias set &amp;lt;ALIAS&amp;gt; &amp;lt;YOUR-S3-ENDPOINT&amp;gt; [YOUR-ACCESS-KEY] [YOUR-SECRET-KEY] create a new bucket mc mb &amp;lt;ALIAS&amp;gt;/stream allow downloading from bucket mc policy set download &amp;lt;ALIAS&amp;gt;/stream CORS Make sure to allow access to the buckets file from your owncast domain.</description></item></channel></rss>